#!/bin/sh

# shellcheck disable=SC2119,SC2120

# shellcheck source=../lib/load-configuration
. "${0%/*}/../lib/load-configuration"

if [ "x${SSH_ORIGINAL_COMMAND%% *}" = 'xget-assignment' ] || \
  [ "x${SSH_ORIGINAL_COMMAND%% *}" = 'xreturn-assignment' ] || \
  [ "x${SSH_ORIGINAL_COMMAND%% *}" = 'xping-from-slave' ]; then

  # small check to prevent some shell-injections
  if printf '%s\n' "${SSH_ORIGINAL_COMMAND}" | \
    grep -q '[^-a-zA-Z0-9.+_ ]'; then

    >&2 printf 'Invalid command: "%s".\n' "${SSH_ORIGINAL_COMMAND}"
    exit 42

  fi

  # shellcheck disable=SC2016
  slave_id=$(
    {
      printf 'SELECT `build_slaves`.`id` FROM `build_slaves`'
      printf ' WHERE `build_slaves`.`name`=from_base64("%s");\n' \
        "$(
          printf '%s' "$1" | \
            base64 -w0
        )"
    } | \
      mysql_run_query
  )
  if [ -z "${slave_id}" ]; then
    >&2 printf 'Build slave "%s" is unnknown to the database.\n' "$1"
    exit 42
  fi

  # shellcheck disable=SC2016
  {
    printf 'INSERT INTO `ssh_log` (`build_slave`,`action`,`parameters`)'
    printf ' VALUES (%s' \
      "${slave_id}"
    printf ',from_base64("%s")' \
      "$(
        printf '%s' "${SSH_ORIGINAL_COMMAND%% *}" | \
          base64 -w0
      )" \
      "$(
        printf '%s' "${SSH_ORIGINAL_COMMAND#* }" | \
          base64 -w0
      )"
    printf ');\n'
  } | \
    mysql_run_query 'unimportant'

  slave="$1" slave_id="${slave_id}" /bin/sh -c "${base_dir}/bin/${SSH_ORIGINAL_COMMAND}"

else

  >&2 printf 'Invalid command: "%s".\n' "${SSH_ORIGINAL_COMMAND}"
  exit 42

fi
